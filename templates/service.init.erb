#!/bin/sh

### BEGIN INIT INFO
# Provides:          unicorn_<%= @name %>
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the unicorn web server
# Description:       starts unicorn
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin
APP="<%= @name %>"
APP_PATH="<%= @approot %>"
NAME="unicorn $APP"
DESC="Unicorn for app $APP"
DAEMON=<%= @real_command %>
DAEMON_ARGS="-E <%= @env %> -c <%= @real_config_path %> -D"
DAEMON_USER="<%= @owner %>"
PIDFILE=<%= @pid_path %>
OLD_PIDFILE="$PIDFILE.oldbin"
SCRIPTNAME=/etc/init.d/$NAME
TIMEOUT=${TIMEOUT-60}
RESTART_SLEEP=<%= @rolling_restarts_sleep %>

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

sig() {
  test -s "$PIDFILE" && kill -$1 `cat $PIDFILE`
}

oldsig() {
  test -s $OLD_PIDFILE && kill -$1 `cat $OLD_PIDFILE`
}

start_cmd() {
  if [ `whoami` = root ]; then
    su - $DAEMON_USER -c "cd $APP_PATH > /dev/null 2>&1 && $DAEMON $DAEMON_ARGS"
  else
    cd $APP_PATH > /dev/null 2>&1 && $DAEMON $DAEMON_ARGS
  fi
}

case $1 in
  start)
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
    sig 0 && echo >&2 "Already running" && exit 0
    start_cmd
    case "$?" in
          0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
          2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  stop)
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
    sig QUIT
    case "$?" in
          0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
          2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  force-stop)
    [ "$VERBOSE" != no ] && log_daemon_msg "Forcing stop of $DESC" "$NAME"
    sig TERM
    case "$?" in
          0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
          2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  restart|reload)
    [ "$VERBOSE" != no ] && log_daemon_msg "Restarting $DESC" "$NAME"
    pidofproc -p "$PIDFILE" "$DAEMON" >/dev/null && sig HUP
    case "$?" in
          0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
          *)
            start_cmd
            case "$?" in
                  0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                  2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
            esac
            ;;
    esac
    ;;
  upgrade)
    [ "$VERBOSE" != no ] && log_daemon_msg "Upgrading $DESC" "$NAME"
    if sig USR2 && sleep $RESTART_SLEEP && sig 0 && oldsig QUIT
    then
      n=$TIMEOUT
      while test -s $OLD_PIDFILE && test $n -ge 0
      do
        sleep 1 && n=$(( $n - 1 ))
      done

      if test $n -lt 0 && test -s $OLD_PIDFILE
      then
        log_end_msg 1
        exit 1
      fi
      log_end_msg 0
      exit 0
    fi
    log_end_msg 1
    ;;
  status)
    status_of_proc -p "$PIDFILE" "$DAEMON" "$NAME" && exit 0 || exit $?
    ;;
  reopen-logs)
    [ "$VERBOSE" != no ] && log_daemon_msg "Reopening Logs of $DESC" "$NAME"
    sig USR1
    case "$?" in
          0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
          2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  *)
    log_action_msg "Usage: $0 <start|stop|force-stop|restart|upgrade|status|reopen-logs>"
    exit 1
    ;;
esac

exit 0
